Line 1: type_specifier : INT

int 

Line 1: declaration_list : ID

x

Line 1: declaration_list : declaration_list COMMA ID

x,y

Line 1: declaration_list : declaration_list COMMA ID

x,y,z

Line 1: declaration_list : declaration_list COMMA ID LTHIRD CONST_INT RTHIRD

x,y,z,a[2]

Line 1: declaration_list : declaration_list COMMA ID LTHIRD CONST_INT RTHIRD

x,y,z,a[2],b[3]

Line 1: var_declaration : type_specifier declaration_list SEMICOLON

int x,y,z,a[2],b[3];


Line 1: unit : var_declaration

int x,y,z,a[2],b[3];


Line 1: program : unit

int x,y,z,a[2],b[3];


Line 2: type_specifier : INT

int 

Line 2: declaration_list : ID LTHIRD CONST_INT RTHIRD

q[2]

Line 2: var_declaration : type_specifier declaration_list SEMICOLON

int q[2];


Line 2: unit : var_declaration

int q[2];


Line 2: program : program unit

int x,y,z,a[2],b[3];
int q[2];


Line 3: type_specifier : INT

int 

Line 3: type_specifier : INT

int 

Line 3: parameter_list : type_specifier ID

int x

Line 3: type_specifier : INT

int 

Line 3: parameter_list : parameter_list COMMA type_specifier ID

int x,int y

Line 3: type_specifier : INT

int 

Line 3: parameter_list : parameter_list COMMA type_specifier ID

int x,int y,int z

Line 7: type_specifier : INT

int 

Line 7: declaration_list : ID

a

Line 7: var_declaration : type_specifier declaration_list SEMICOLON

int a;


Line 7: statement : var_declaration

int a;


Line 7: statements : statement

int a;


Line 8: type_specifier : INT

int 

Line 8: declaration_list : ID LTHIRD CONST_INT RTHIRD

b[10]

Line 8: var_declaration : type_specifier declaration_list SEMICOLON

int b[10];


Line 8: statement : var_declaration

int b[10];


Line 8: statements : statements statement

int a;
int b[10];


Line 10: type_specifier : INT

int 

Line 10: declaration_list : ID

p

Line 10: var_declaration : type_specifier declaration_list SEMICOLON

int p;


Line 10: statement : var_declaration

int p;


Line 10: statements : statement

int p;


Line 12: type_specifier : INT

int 

Line 12: declaration_list : ID

q

Line 12: var_declaration : type_specifier declaration_list SEMICOLON

int q;


Line 12: statement : var_declaration

int q;


Line 12: statements : statement

int q;


Line 13: compound_statement : LCURL statements RCURL

{
  int q;
}





ScopeTable # 1.1.1.1.1
 23 --> < q , ID{disp = -24} > 



ScopeTable # 1.1.1.1
 22 --> < p , ID{disp = -22} > 



ScopeTable # 1.1.1
 7 --> < a , ID{disp = 0} > 
 8 --> < b , ID{disp = -2} > 



ScopeTable # 1.1
 0 --> < x , ID{disp = 4} > 
 1 --> < y , ID{disp = 6} > 
 2 --> < z , ID{disp = 8} > 



ScopeTable # 1
 0 --> < x , ID{disp = 0} > 
 1 --> < y , ID{disp = 0} > 
 2 --> < z , ID{disp = 0} > 
 7 --> < a , ID{disp = 0} > 
 8 --> < b , ID{disp = 0} > 
 12 --> < f , ID{disp = 0} > 
 23 --> < q , ID{disp = 0} > 


Line 13: statement : compound_statement

{
  int q;
}



Line 13: statements : statements statement

int p;
{
  int q;
}



Line 14: compound_statement : LCURL statements RCURL

{
  int p;
  {
    int q;
  }
}





ScopeTable # 1.1.1.1
 22 --> < p , ID{disp = -22} > 



ScopeTable # 1.1.1
 7 --> < a , ID{disp = 0} > 
 8 --> < b , ID{disp = -2} > 



ScopeTable # 1.1
 0 --> < x , ID{disp = 4} > 
 1 --> < y , ID{disp = 6} > 
 2 --> < z , ID{disp = 8} > 



ScopeTable # 1
 0 --> < x , ID{disp = 0} > 
 1 --> < y , ID{disp = 0} > 
 2 --> < z , ID{disp = 0} > 
 7 --> < a , ID{disp = 0} > 
 8 --> < b , ID{disp = 0} > 
 12 --> < f , ID{disp = 0} > 
 23 --> < q , ID{disp = 0} > 


Line 14: statement : compound_statement

{
  int p;
  {
    int q;
  }
}



Line 14: statements : statements statement

int a;
int b[10];
{
  int p;
  {
    int q;
  }
}



Line 15: compound_statement : LCURL statements RCURL

{
  int a;
  int b[10];
  {
    int p;
    {
      int q;
    }
  }
}





ScopeTable # 1.1.1
 7 --> < a , ID{disp = 0} > 
 8 --> < b , ID{disp = -2} > 



ScopeTable # 1.1
 0 --> < x , ID{disp = 4} > 
 1 --> < y , ID{disp = 6} > 
 2 --> < z , ID{disp = 8} > 



ScopeTable # 1
 0 --> < x , ID{disp = 0} > 
 1 --> < y , ID{disp = 0} > 
 2 --> < z , ID{disp = 0} > 
 7 --> < a , ID{disp = 0} > 
 8 --> < b , ID{disp = 0} > 
 12 --> < f , ID{disp = 0} > 
 23 --> < q , ID{disp = 0} > 


Line 15: statement : compound_statement

{
  int a;
  int b[10];
  {
    int p;
    {
      int q;
    }
  }
}



Line 15: statements : statement

{
  int a;
  int b[10];
  {
    int p;
    {
      int q;
    }
  }
}



Line 16: compound_statement : LCURL statements RCURL

{
  {
    int a;
    int b[10];
    {
      int p;
      {
        int q;
      }
    }
  }
}





ScopeTable # 1.1
 0 --> < x , ID{disp = 4} > 
 1 --> < y , ID{disp = 6} > 
 2 --> < z , ID{disp = 8} > 



ScopeTable # 1
 0 --> < x , ID{disp = 0} > 
 1 --> < y , ID{disp = 0} > 
 2 --> < z , ID{disp = 0} > 
 7 --> < a , ID{disp = 0} > 
 8 --> < b , ID{disp = 0} > 
 12 --> < f , ID{disp = 0} > 
 23 --> < q , ID{disp = 0} > 


Line 16: func_definition : type_specifier ID LPAREN parameter_list RPAREN compound_statement

int f(int x,int y,int z){
  {
    int a;
    int b[10];
    {
      int p;
      {
        int q;
      }
    }
  }
}



Line 16: unit : func_definition

int f(int x,int y,int z){
  {
    int a;
    int b[10];
    {
      int p;
      {
        int q;
      }
    }
  }
}



Line 16: program : program unit

int x,y,z,a[2],b[3];
int q[2];
int f(int x,int y,int z){
  {
    int a;
    int b[10];
    {
      int p;
      {
        int q;
      }
    }
  }
}



Line 17: type_specifier : FLOAT

float 

Line 17: declaration_list : ID

t

Line 17: var_declaration : type_specifier declaration_list SEMICOLON

float t;


Line 17: unit : var_declaration

float t;


Line 17: program : program unit

int x,y,z,a[2],b[3];
int q[2];
int f(int x,int y,int z){
  {
    int a;
    int b[10];
    {
      int p;
      {
        int q;
      }
    }
  }
}

float t;


Line 18: type_specifier : INT

int 

Line 20: type_specifier : INT

int 

Line 20: declaration_list : ID

x

Line 20: declaration_list : declaration_list COMMA ID

x,y

Line 20: declaration_list : declaration_list COMMA ID LTHIRD CONST_INT RTHIRD

x,y,z[2]

Line 20: declaration_list : declaration_list COMMA ID

x,y,z[2],p

Line 20: var_declaration : type_specifier declaration_list SEMICOLON

int x,y,z[2],p;


Line 20: statement : var_declaration

int x,y,z[2],p;


Line 20: statements : statement

int x,y,z[2],p;


Line 21: variable : ID

x

Line 21: factor : CONST_INT

1

Line 21: unary_expression : factor

1

Line 21: term : unary_expression

1

Line 21: simple_expression : term

1

Line 21: rel_expression : simple_expression

1

Line 21: logic_expression : rel_expression

1

Line 21: arguments : logic_expression

1

Line 21: factor : CONST_INT

2

Line 21: unary_expression : factor

2

Line 21: term : unary_expression

2

Line 21: simple_expression : term

2

Line 21: rel_expression : simple_expression

2

Line 21: logic_expression : rel_expression

2

Line 21: arguments : arguments COMMA logic_expression

1,2

Line 21: factor : CONST_INT

3

Line 21: unary_expression : factor

3

Line 21: term : unary_expression

3

Line 21: simple_expression : term

3

Line 21: rel_expression : simple_expression

3

Line 21: logic_expression : rel_expression

3

Line 21: arguments : arguments COMMA logic_expression

1,2,3

Line 21: argument_list : arguments

1,2,3

Line 21: factor : ID LPAREN argument_list RPAREN

f(1,2,3)

Line 21: unary_expression : factor

f(1,2,3)

Line 21: term : unary_expression

f(1,2,3)

Line 21: simple_expression : term

f(1,2,3)

Line 21: rel_expression : simple_expression

f(1,2,3)

Line 21: logic_expression : rel_expression

f(1,2,3)

Line 21: expression : variable ASSIGNOP logic_expression

x=f(1,2,3)

Line 21: expression_statement : expression SEMICOLON

x=f(1,2,3);


Line 21: statement : expression_statement

x=f(1,2,3);


Line 21: statements : statements statement

int x,y,z[2],p;
x=f(1,2,3);


Line 22: statement : PRINTLN LPAREN ID RPAREN SEMICOLON

println(x);


Line 22: statements : statements statement

int x,y,z[2],p;
x=f(1,2,3);
println(x);


Line 23: compound_statement : LCURL statements RCURL

{
  int x,y,z[2],p;
  x=f(1,2,3);
  println(x);
}





ScopeTable # 1.2
 0 --> < x , ID{disp = 0} > 
 1 --> < y , ID{disp = -2} > 
 2 --> < z , ID{disp = -4} > 
 22 --> < p , ID{disp = -8} > 



ScopeTable # 1
 0 --> < x , ID{disp = 0} > 
 1 --> < y , ID{disp = 0} > < main , ID{disp = 0} > 
 2 --> < z , ID{disp = 0} > 
 7 --> < a , ID{disp = 0} > 
 8 --> < b , ID{disp = 0} > 
 12 --> < f , ID{disp = 0} > 
 23 --> < q , ID{disp = 0} > 
 26 --> < t , ID{disp = 0} > 


Line 23: func_definition : type_specifier ID LPAREN RPAREN compound_statement

int main(){
  int x,y,z[2],p;
  x=f(1,2,3);
  println(x);
}



Line 23: unit : func_definition

int main(){
  int x,y,z[2],p;
  x=f(1,2,3);
  println(x);
}



Line 23: program : program unit

int x,y,z,a[2],b[3];
int q[2];
int f(int x,int y,int z){
  {
    int a;
    int b[10];
    {
      int p;
      {
        int q;
      }
    }
  }
}

float t;
int main(){
  int x,y,z[2],p;
  x=f(1,2,3);
  println(x);
}



Line 23: start : program



ScopeTable # 1
 0 --> < x , ID{disp = 0} > 
 1 --> < y , ID{disp = 0} > < main , ID{disp = 0} > 
 2 --> < z , ID{disp = 0} > 
 7 --> < a , ID{disp = 0} > 
 8 --> < b , ID{disp = 0} > 
 12 --> < f , ID{disp = 0} > 
 23 --> < q , ID{disp = 0} > 
 26 --> < t , ID{disp = 0} > 



Total lines: 23
Total errors: 0

