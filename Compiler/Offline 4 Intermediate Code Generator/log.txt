Line 3: type_specifier : INT

int 

Line 5: type_specifier : INT

int 

Line 5: declaration_list : ID

i

Line 5: var_declaration : type_specifier declaration_list SEMICOLON

int i;


Line 5: statement : var_declaration

int i;


Line 5: statements : statement

int i;


Line 6: type_specifier : FLOAT

float 

Line 6: declaration_list : ID

f

Line 6: var_declaration : type_specifier declaration_list SEMICOLON

float f;


Line 6: statement : var_declaration

float f;


Line 6: statements : statements statement

int i;
float f;


Line 7: variable : ID

i

Line 7: factor : CONST_INT

10

Line 7: unary_expression : factor

10

Line 7: term : unary_expression

10

Line 7: factor : CONST_INT

7

Line 7: unary_expression : factor

7

Line 7: term : term MULOP unary_expression

10/7

Line 7: simple_expression : term

10/7

Line 7: rel_expression : simple_expression

10/7

Line 7: logic_expression : rel_expression

10/7

Line 7: expression : variable ASSIGNOP logic_expression

i=10/7

Line 7: expression_statement : expression SEMICOLON

i=10/7;


Line 7: statement : expression_statement

i=10/7;


Line 7: statements : statements statement

int i;
float f;
i=10/7;


Line 7: statement : PRINTLN LPAREN ID RPAREN SEMICOLON

println(i);


Line 7: statements : statements statement

int i;
float f;
i=10/7;
println(i);


Line 8: variable : ID

f

Line 8: factor : CONST_INT

10

Line 8: unary_expression : factor

10

Line 8: term : unary_expression

10

Line 8: factor : CONST_FLOAT

7.00

Line 8: unary_expression : factor

7.00

Line 8: term : term MULOP unary_expression

10/7.00

Line 8: simple_expression : term

10/7.00

Line 8: rel_expression : simple_expression

10/7.00

Line 8: logic_expression : rel_expression

10/7.00

Line 8: expression : variable ASSIGNOP logic_expression

f=10/7.00

Line 8: expression_statement : expression SEMICOLON

f=10/7.00;


Line 8: statement : expression_statement

f=10/7.00;


Line 8: statements : statements statement

int i;
float f;
i=10/7;
println(i);
f=10/7.00;


Line 8: statement : PRINTLN LPAREN ID RPAREN SEMICOLON

println(f);


Line 8: statements : statements statement

int i;
float f;
i=10/7;
println(i);
f=10/7.00;
println(f);


Line 9: variable : ID

f

Line 9: factor : CONST_FLOAT

10.00

Line 9: unary_expression : factor

10.00

Line 9: term : unary_expression

10.00

Line 9: factor : CONST_INT

7

Line 9: unary_expression : factor

7

Line 9: term : term MULOP unary_expression

10.00/7

Line 9: simple_expression : term

10.00/7

Line 9: rel_expression : simple_expression

10.00/7

Line 9: logic_expression : rel_expression

10.00/7

Line 9: expression : variable ASSIGNOP logic_expression

f=10.00/7

Line 9: expression_statement : expression SEMICOLON

f=10.00/7;


Line 9: statement : expression_statement

f=10.00/7;


Line 9: statements : statements statement

int i;
float f;
i=10/7;
println(i);
f=10/7.00;
println(f);
f=10.00/7;


Line 9: statement : PRINTLN LPAREN ID RPAREN SEMICOLON

println(f);


Line 9: statements : statements statement

int i;
float f;
i=10/7;
println(i);
f=10/7.00;
println(f);
f=10.00/7;
println(f);


Line 10: variable : ID

f

Line 10: factor : CONST_FLOAT

10.00

Line 10: unary_expression : factor

10.00

Line 10: term : unary_expression

10.00

Line 10: factor : CONST_FLOAT

7.00

Line 10: unary_expression : factor

7.00

Line 10: term : term MULOP unary_expression

10.00/7.00

Line 10: simple_expression : term

10.00/7.00

Line 10: rel_expression : simple_expression

10.00/7.00

Line 10: logic_expression : rel_expression

10.00/7.00

Line 10: expression : variable ASSIGNOP logic_expression

f=10.00/7.00

Line 10: expression_statement : expression SEMICOLON

f=10.00/7.00;


Line 10: statement : expression_statement

f=10.00/7.00;


Line 10: statements : statements statement

int i;
float f;
i=10/7;
println(i);
f=10/7.00;
println(f);
f=10.00/7;
println(f);
f=10.00/7.00;


Line 10: statement : PRINTLN LPAREN ID RPAREN SEMICOLON

println(f);


Line 10: statements : statements statement

int i;
float f;
i=10/7;
println(i);
f=10/7.00;
println(f);
f=10.00/7;
println(f);
f=10.00/7.00;
println(f);


Line 11: compound_statement : LCURL statements RCURL

{
  int i;
  float f;
  i=10/7;
  println(i);
  f=10/7.00;
  println(f);
  f=10.00/7;
  println(f);
  f=10.00/7.00;
  println(f);
}





ScopeTable # 1.1
 12 --> < f , ID > 
 15 --> < i , ID > 



ScopeTable # 1
 1 --> < main , ID > 


Line 11: func_definition : type_specifier ID LPAREN RPAREN compound_statement

int main(){
  int i;
  float f;
  i=10/7;
  println(i);
  f=10/7.00;
  println(f);
  f=10.00/7;
  println(f);
  f=10.00/7.00;
  println(f);
}



Line 11: unit : func_definition

int main(){
  int i;
  float f;
  i=10/7;
  println(i);
  f=10/7.00;
  println(f);
  f=10.00/7;
  println(f);
  f=10.00/7.00;
  println(f);
}



Line 11: program : unit

int main(){
  int i;
  float f;
  i=10/7;
  println(i);
  f=10/7.00;
  println(f);
  f=10.00/7;
  println(f);
  f=10.00/7.00;
  println(f);
}



Line 11: start : program



ScopeTable # 1
 1 --> < main , ID > 



Total lines: 11
Total errors: 0

